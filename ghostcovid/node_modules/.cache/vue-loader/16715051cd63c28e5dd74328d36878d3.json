{"remainingRequest":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\src\\views\\Statistik.vue?vue&type=template&id=3574d48e&","dependencies":[{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\src\\views\\Statistik.vue","mtime":1668882937242},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712169000},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JasminWagner\\Documents\\5DHITM\\Diplomprojekt\\Projekt\\ghostcovid\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InN0YXRpc3RpayI+CiAgPEhlYWRlciAvPgogIDxzZWN0aW9uIGlkPSJiZWdydWVzc3VuZyI+CiAgICA8VGl0ZWwgbXNnPSJJbmZvcm1hdGlvbmVuIiAvPgogICAgPFppdGF0IG1zZz0iLi4uIE9mdCBmaW5kZW4gQmV0cm9mZmVuZSBuaWNodCBnZW51ZyBvZGVyIGRpZSByaWNodGlnZW4gSW5mb3JtYXRpb25lbi4gCiAgICAgICAgQXVmIHN0dW5kZW5sYW5nZXMgU3VjaGVuIHVuZCBEdXJjaHN0w7ZiZXJuIGRlcyBJbnRlcm5ldHMgaGFiZW4gZGllc2UgUGVyc29uZW4gCiAgICAgICAga2VpbmUgWmVpdCB1bmQgTHVzdCwgdW5kIHdlbm4gc2llIGVuZGxpY2ggZWluZSBXZWJzZWl0ZSB6dSBkZW0gVGhlbWEgCiAgICAgICAgZ2VmdW5kZW4gaGFiZW4sIGtvbW1lbiBzaWUgZXJzdCDDvGJlciBlaW5lbiBJcnJnYXJ0ZW4gYW4gTGlua3MgYW5zIFppZWwuIC4uLiIgbXNnMj0iR2hvc3QgQ292aWQiLz48YnI+PGJyPgogICAgPGEgaHJlZj0iI3N0YXRpc3RpazEiIGNsYXNzPSJzdGFydGJ1dHRvbiI+TGV0J3MgPGIgc3R5bGU9ImZvbnQtZmFtaWx5OkNoYWxrZHVzdGVyOyBsZXR0ZXItc3BhY2luZzoxcHg7Ij5nZXQgaW5mb3JtZWQ8L2I+IHRvZ2V0aGVyITwvYT4KICA8L3NlY3Rpb24+CiAgPHNlY3Rpb24gaWQ9InN0YXRpc3RpazEiIGNsYXNzPSJjb250ZW50aG9tZSI+CiAgICA8cCBjbGFzcz0ibGV0cyI+VGVpbCBkZXIgQ29yb25haW5maXppZXJ0ZW4gZW50d2lja2VsdCBNRS9DRlM8L3A+CiAgICA8ZGl2IGNsYXNzPSJyb3cgaW5mb3MiPgogICAgICA8ZGl2IGNsYXNzPSJjb2wgczYiPgogICAgICAgIDxpbWcgY2xhc3M9ImluZm9nciIgc3JjPSIuLi9hc3NldHMvZ3JhZmlrMDEucG5nIiAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sIHM2IGluZm90ZXh0Ij4KICAgICAgICAuLi4gVm9uIEJldHJvZmZlbmVuLCBkaWUgbWluZGVzdGVucyAyOCBUYWdlIG5hY2ggZGVyIEluZmVrdGlvbiBtaXQgU0FSUy1Db1YtMiB3ZWl0ZXJoaW4gCiAgICAgICAgU3ltcHRvbWUgYmVyaWNodGV0ZW4sIGxpdHRlbiBhdWNoIG5hY2ggNiBNb25hdGVuIG5vY2ggOTEsOCAlIGFuIHBlcnNpc3RpZXJlbmRlbiBTeW1wdG9tZW4uIAogICAgICAgIE5hY2ggNiBNb25hdGVuIHdhcmVuIGRpZSBkcmVpIGjDpHVmaWdzdGVuIFN5bXB0b21lIEZhdGlndWUsIFBvc3QtRXhlcnRpb25hbCBNYWxhaXNlIHVuZCAKICAgICAgICBCcmFpbiBGb2cgKGtvZ25pdGl2ZSBEeXNmdW5rdGlvbikuIC4uLiBEaWUgU2Nod2VyZSBkZXIgU3ltcHRvbWUgc2NoZWludCB0ZW5kZW56aWVsbCBhYnp1bmVobWVuLCAKICAgICAgICBhYmVyIGF1Y2ggbmFjaCA3IE1vbmF0ZW4gc3R1ZnRlIGRpZSBNZWhyaGVpdCBkZXIgU3R1ZGllbnRlaWxuZWhtZXIqaW5uZW4gaWhyZSBTeW1wdG9tZSBhbHMgCiAgICAgICAgbW9kZXJhdCBlaW4uIERpZSBBbnphaGwgZGVyIGJlcmljaHRldGVuIFN5bXB0b21lIGhhdHRlIGltIFNjaG5pdHQgaWhyZW4gSMO2aGVwdW5rdCBpbiBNb25hdCAyIHNlaXQgCiAgICAgICAgS3JhbmtoZWl0c2JlZ2lubiB1bmQgZmxhY2h0ZSBhbnNjaGxpZcOfZW5kIGluIGRlbiBGb2xnZW1vbmF0ZW4gbGVpY2h0IGFiLCBhdWYgZHVyY2hzY2huaXR0bGljaCAKICAgICAgICAxMyw4IFN5bXB0b21lIGluIE1vbmF0IDcuIC4uLiA8YnI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubWVjZnMuZGUvc3R1ZGllbi16dS1sb25nLWNvdmlkLWVpbi10ZWlsLWRlci1jb3JvbmFpbmZpemllcnRlbi1lbnR3aWNrZWx0LW1lLWNmcy8iIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgIDxidXR0b24gY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1saWdodCBidXR0b25pbmYiPkFydGlrZWw8L2J1dHRvbj4KICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0ibGV0cyI+LTwvcD4KICAgIDxwIGNsYXNzPSJsZXRzIj5Mb25nLUNPVklEOiBEZXIgbGFuZ2UgV2VnIGRlciBHZW5lc3VuZzwvcD4KICAgIDxkaXYgY2xhc3M9InJvdyBpbmZvcyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzNiI+CiAgICAgICAgPGltZyBjbGFzcz0iaW5mb2dyIiBzcmM9Ii4uL2Fzc2V0cy9ncmFmaWswMi5wbmciIC8+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wgczYgaW5mb3RleHQiPgogICAgICAgIC0gQmVpIFN5bXB0b21lbiBiaXMgenUgNCBXb2NoZW4gbmFjaCBkZXIgSW5mZWt0aW9uIG1pdCBkZW0gU0FSUy1Db1YtMiBWaXJ1cyBoYW5kZWx0IGVzIHNpY2ggdW0gYWt1dGVzIENPVklELTE5LiAKICAgICAgICBEYWJlaSB0cmV0ZW4gdmVyc2NoaWVkZW5lIFNjaHdlcmVncmFkZSBhdWYuIFNjaHdlcmUgdW5kIGtyaXRpc2NoZSBGw6RsbGUgbcO8c3NlbiBpbSBTcGl0YWwgdmVyc29yZ3Qgd2VyZGVuLiA8YnI+CiAgICAgICAgLSBJbSB3ZWl0ZXJlbiBWZXJsYXVmICg0LTggV29jaGVuKSB3ZXJkZW4gZGllIFN5bXB0b21lIGFscyBmb3J0d8OkaHJlbmQgYmV6ZWljaG5ldC4gVHlwaXNjaGUgU3ltcHRvbWUgc2luZCBIdXN0ZW4sIAogICAgICAgIEF0ZW1ub3QsIEZpZWJlciwgSGFscy0vS29wZi0vR2xpZWRlcnNjaG1lcnplbi4gPGJyPgogICAgICAgIC0gQmxlaWJlbiBkaWUgU3ltcHRvbWUgbMOkbmdlciBhbHMgOCBXb2NoZW4gYmVzdGVoZW4gdW5kIGvDtm5uZW4gbmljaHQgZHVyY2ggd2VpdGVyZSBEaWFnbm9zZW4gYW5kZXJlbiBFcmtyYW5rdW5nZW4gCiAgICAgICAgenVnZXNjaHJpZWJlbiB3ZXJkZW4sIHNwcmljaHQgbWFuIHZvbSBQb3N0LUNPVklEIFN5bmRyb20uIDxicj4KICAgICAgICAtIEluIEZhY2hrcmVpc2VuIHdpcmQgbnVuIGRpZSBnZXNhbXRlIFplaXQgYWIgNCBXb2NoZW4gbmFjaCBkZXIgSW5mZWt0aW9uIGFscyBMb25nLUNPVklEIGJlemVpY2huZXQsIHNvYmFsZCB6dSAKICAgICAgICBkZW4gYmVzdGVoZW5kZW4gU3ltcHRvbWVuIGF1Y2ggbmV1ZSBoaW56dWtvbW1lbi4gPGJyPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnBmaXplcm1lZC5hdC9uZXdzL2xvbmctY292aWQtZGVyLWxhbmdlLXdlZy1kZXItZ2VuZXN1bmciIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgIDxidXR0b24gY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1saWdodCBidXR0b25pbmYiPkFydGlrZWw8L2J1dHRvbj4KICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0ibGV0cyI+LTwvcD4KICAgIDxwIGNsYXNzPSJsZXRzIj5Mb25nIENPVklEPC9wPgogICAgPGRpdiBjbGFzcz0icm93IGluZm9zIj4KICAgICAgPGRpdiBjbGFzcz0iY29sIHM2Ij4KICAgICAgICA8aW1nIGNsYXNzPSJpbmZvZ3IiIHNyYz0iLi4vYXNzZXRzL2dyYWZpazAzLnBuZyIgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzNiBpbmZvdGV4dCI+CiAgICAgICAgLi4uIEdlaW1wZnRlIE1lbnNjaGVuIGJlcmljaHRlbiwgbWVociBNZW5zY2hlbiBtaXQgTG9uZy1DT1ZJRCB6dSBrZW5uZW4gYWxzIFVuZ2VpbXBmdGUuIEVpbmUgVXJzYWNoZS1XaXJrdW5ncy1JbnRlcnByZXRhdGlvbiAKICAgICAgICBpc3QgaGllciBhbGxlcmRpbmdzIG5pY2h0IG3DtmdsaWNoLiBJbiBkZXIgVGVuZGVueiBzaW5kIFVuZ2VpbXBmdGUsIGRpZSBNZW5zY2hlbiBtaXQgTG9uZy1DT1ZJRCBrZW5uZW4gZWhlciBpbXBmYmVyZWl0ZXIgCiAgICAgICAgYWxzIE1lbnNjaGVuLCBkaWUgbmllbWFuZGVuIG1pdCBMb25nLUNPVklEIGtlbm5lbiAobi5zLiwgcCA9IDAuMDgpLiBVbmdlYWNodGV0IGRlcyBJbXBmc3RhdHVzIG1hY2h0IGFiZXIgZWluZSBCZWthbm50c2NoYWZ0IAogICAgICAgIG1pdCBMb25nLUNPVklEIGV0d2FzIG1pdCBkZXIgZWlnZW5lbiBXYWhybmVobXVuZzogQmVmcmFndW5nc3RlaWxuZWhtZW5kZSwgZGllIGplbWFuZGVuIG1pdCBMb25nLUNPVklEIGtlbm5lbiwgc2Now6R0emVuIGVpbmUgCiAgICAgICAgSW5mZWt0aW9uIGFscyByaXNpa29yZWljaGVyIChzY2h3ZXJ3aWVnZW5kZXIpIGVpbiwgaGFiZW4gbWVociBBbmdzdCB2b3IgZWluZXIgSW5mZWt0aW9uIHVuZCBoYWJlbiBtZWhyIFNvcmdlbiDDvGJlciAKICAgICAgICBMYW5nemVpdGZvbGdlbi4gQXXDn2VyZGVtIHNpbmQgc2llIGVoZXIgZsO8ciBlaW5lIEltcGZwZmxpY2h0IGFscyBNZW5zY2hlbiwgZGllIG5pZW1hbmRlbiBtaXQgTG9uZy1DT1ZJRCBrZW5uZW4uIC4uLiA8YnI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wcm9qZWt0ZS51bmktZXJmdXJ0LmRlL2Nvc21vMjAyMC93ZWIvdG9waWMvcmlzaWtvLWVtb3Rpb25lbi1zb3JnZW4vNDAtbG9uZ2NvdmlkLyIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0id2F2ZXMtZWZmZWN0IHdhdmVzLWxpZ2h0IGJ1dHRvbmluZiI+QXJ0aWtlbDwvYnV0dG9uPgogICAgICAgIDwvYT4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L3NlY3Rpb24+CgogIDxGb290ZXIgLz4KPC9kaXY+Cgo="},null]}